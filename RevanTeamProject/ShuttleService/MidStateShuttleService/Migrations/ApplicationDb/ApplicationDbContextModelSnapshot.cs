// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MidStateShuttleService.Models.Data;

#nullable disable

namespace MidStateShuttleService.Migrations.ApplicationDb
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MidStateShuttleService.Areas.Identity.Data.MidStateShuttleServiceUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MidStateShuttleServiceUser");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.Bus", b =>
                {
                    b.Property<int>("BusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusId"));

                    b.Property<string>("BusNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusRiderId")
                        .HasColumnType("int");

                    b.Property<int>("DriverId")
                        .HasColumnType("int")
                        .HasColumnName("DriverID");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PassengerCapacity")
                        .HasColumnType("int");

                    b.HasKey("BusId")
                        .HasName("PK__Bus__6A0F60B5718116B1");

                    b.HasIndex("BusRiderId");

                    b.HasIndex("DriverId");

                    b.ToTable("Bus");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.BusDriver", b =>
                {
                    b.Property<int>("BusDriverId")
                        .HasColumnType("int");

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.HasKey("BusDriverId")
                        .HasName("PK__BusDrive__BA8E141F66849534");

                    b.HasIndex("BusId");

                    b.HasIndex("DriverId");

                    b.ToTable("BusDriver");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.BusRider", b =>
                {
                    b.Property<int>("BusRiderId")
                        .HasColumnType("int");

                    b.Property<int>("BusId")
                        .HasColumnType("int")
                        .HasColumnName("BusID");

                    b.Property<int>("RiderId")
                        .HasColumnType("int")
                        .HasColumnName("RiderID");

                    b.HasKey("BusRiderId")
                        .HasName("PK__BusRider__FE19AE6471A5ECDC");

                    b.HasIndex("BusId");

                    b.HasIndex("RiderId");

                    b.ToTable("BusRider");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.BusRoute", b =>
                {
                    b.Property<int>("BusRouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusRouteId"));

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.HasKey("BusRouteId")
                        .HasName("PK__BusRoute__2A158E8DAE35A2E8");

                    b.HasIndex("BusId");

                    b.HasIndex("RouteId");

                    b.ToTable("BusRoute");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.Driver", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DriverId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumb")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("DriverId")
                        .HasName("PK__Driver__F1B1CD049A2B343A");

                    b.ToTable("Driver");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FeedbackID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateSubmitted")
                        .HasColumnType("datetime");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.HasKey("FeedbackId")
                        .HasName("PK__Feedback__6A4BEDF69EC0AC18");

                    b.HasIndex("UserId");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LocationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("State")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasDefaultValue("WI");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("LocationId")
                        .HasName("PK__Location__E7FEA477A8B727BF");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.Message", b =>
                {
                    b.Property<int>("ServiceMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ServiceMessageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceMessageId"));

                    b.Property<int>("DriverId")
                        .HasColumnType("int")
                        .HasColumnName("DriverID");

                    b.Property<string>("Message1")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)")
                        .HasColumnName("Message");

                    b.Property<int>("RouteId")
                        .HasColumnType("int")
                        .HasColumnName("RouteID");

                    b.HasKey("ServiceMessageId")
                        .HasName("PK__tmp_ms_x__02DEBA9EF8FCEC20");

                    b.HasIndex("DriverId");

                    b.HasIndex("RouteId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.Registration", b =>
                {
                    b.Property<int>("RegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegistrationId"));

                    b.Property<bool>("AgreeToTerms")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckedIn")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("FeedBackId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PreferContact")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<bool>("SepcialRequest")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SpecialRequestDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RegistrationId")
                        .HasName("PK__Registra__6EF588103B2104F6");

                    b.HasIndex("FeedBackId");

                    b.HasIndex("RouteId");

                    b.HasIndex("UserId");

                    b.ToTable("Registration");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.Rider", b =>
                {
                    b.Property<int>("RiderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RiderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RiderId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RiderId")
                        .HasName("PK__Rider__7D726C00670C3598");

                    b.HasIndex("UserId");

                    b.ToTable("Rider");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RouteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteId"));

                    b.Property<string>("AdditionalDetails")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("DropOffLocationId")
                        .HasColumnType("int")
                        .HasColumnName("DropOffLocationID");

                    b.Property<TimeOnly>("DropOffTime")
                        .HasColumnType("time");

                    b.Property<int>("PickUpLocationId")
                        .HasColumnType("int")
                        .HasColumnName("PickUpLocationID");

                    b.Property<TimeOnly>("PickUpTime")
                        .HasColumnType("time");

                    b.HasKey("RouteId")
                        .HasName("PK__Route__80979AAD3C88294B");

                    b.HasIndex("DropOffLocationId");

                    b.HasIndex("PickUpLocationId");

                    b.ToTable("Route");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.RouteLocation", b =>
                {
                    b.Property<int>("RouteLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RouteLocationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteLocationId"));

                    b.Property<TimeOnly>("ArrivalTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("DepartureTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsStartLocation")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("LocationID");

                    b.Property<int>("NextStopId")
                        .HasColumnType("int")
                        .HasColumnName("NextStopID");

                    b.Property<int>("RouteId")
                        .HasColumnType("int")
                        .HasColumnName("RouteID");

                    b.HasKey("RouteLocationId")
                        .HasName("PK__RouteLoc__ADC74A46FA981E29");

                    b.HasIndex("LocationId");

                    b.HasIndex("NextStopId");

                    b.ToTable("RouteLocation");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.Bus", b =>
                {
                    b.HasOne("MidStateShuttleService.Models.Data.Rider", "BusRider")
                        .WithMany("Buses")
                        .HasForeignKey("BusRiderId")
                        .IsRequired()
                        .HasConstraintName("FK__Bus__BusRiderId__10566F31");

                    b.HasOne("MidStateShuttleService.Models.Data.Driver", "Driver")
                        .WithMany("Buses")
                        .HasForeignKey("DriverId")
                        .IsRequired()
                        .HasConstraintName("FK__Bus__DriverID__48CFD27E");

                    b.Navigation("BusRider");

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.BusDriver", b =>
                {
                    b.HasOne("MidStateShuttleService.Models.Data.Bus", "Bus")
                        .WithMany("BusDrivers")
                        .HasForeignKey("BusId")
                        .IsRequired()
                        .HasConstraintName("FK__BusDriver__BusId__14270015");

                    b.HasOne("MidStateShuttleService.Models.Data.Driver", "Driver")
                        .WithMany("BusDrivers")
                        .HasForeignKey("DriverId")
                        .IsRequired()
                        .HasConstraintName("FK__BusDriver__Drive__151B244E");

                    b.Navigation("Bus");

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.BusRider", b =>
                {
                    b.HasOne("MidStateShuttleService.Models.Data.Bus", "Bus")
                        .WithMany("BusRiders")
                        .HasForeignKey("BusId")
                        .IsRequired()
                        .HasConstraintName("FK__BusRider__BusID__4BAC3F29");

                    b.HasOne("MidStateShuttleService.Models.Data.Rider", "Rider")
                        .WithMany("BusRiders")
                        .HasForeignKey("RiderId")
                        .IsRequired()
                        .HasConstraintName("FK__BusRider__RiderI__4CA06362");

                    b.Navigation("Bus");

                    b.Navigation("Rider");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.BusRoute", b =>
                {
                    b.HasOne("MidStateShuttleService.Models.Data.Bus", "Bus")
                        .WithMany("BusRoutes")
                        .HasForeignKey("BusId")
                        .IsRequired()
                        .HasConstraintName("FK__BusRoute__BusId__2A164134");

                    b.HasOne("MidStateShuttleService.Models.Data.Route", "Route")
                        .WithMany("BusRoutes")
                        .HasForeignKey("RouteId")
                        .IsRequired()
                        .HasConstraintName("FK__BusRoute__RouteI__2B0A656D");

                    b.Navigation("Bus");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.Feedback", b =>
                {
                    b.HasOne("MidStateShuttleService.Areas.Identity.Data.MidStateShuttleServiceUser", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.Message", b =>
                {
                    b.HasOne("MidStateShuttleService.Models.Data.Driver", "Driver")
                        .WithMany("Messages")
                        .HasForeignKey("DriverId")
                        .IsRequired()
                        .HasConstraintName("FK__Message__DriverI__1DB06A4F");

                    b.HasOne("MidStateShuttleService.Models.Data.Route", "Route")
                        .WithMany("Messages")
                        .HasForeignKey("RouteId")
                        .IsRequired()
                        .HasConstraintName("FK__Message__RouteID__1CBC4616");

                    b.Navigation("Driver");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.Registration", b =>
                {
                    b.HasOne("MidStateShuttleService.Models.Data.Feedback", "FeedBack")
                        .WithMany("Registrations")
                        .HasForeignKey("FeedBackId")
                        .HasConstraintName("FK__Registrat__FeedB__2739D489");

                    b.HasOne("MidStateShuttleService.Models.Data.Route", "Route")
                        .WithMany("Registrations")
                        .HasForeignKey("RouteId")
                        .IsRequired()
                        .HasConstraintName("FK__Registrat__Route__2645B050");

                    b.HasOne("MidStateShuttleService.Areas.Identity.Data.MidStateShuttleServiceUser", "User")
                        .WithMany("Registrations")
                        .HasForeignKey("UserId");

                    b.Navigation("FeedBack");

                    b.Navigation("Route");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.Rider", b =>
                {
                    b.HasOne("MidStateShuttleService.Areas.Identity.Data.MidStateShuttleServiceUser", "User")
                        .WithMany("Riders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.Route", b =>
                {
                    b.HasOne("MidStateShuttleService.Models.Data.Location", "DropOffLocation")
                        .WithMany("RouteDropOffLocations")
                        .HasForeignKey("DropOffLocationId")
                        .IsRequired()
                        .HasConstraintName("FK__Route__DropOffLo__19DFD96B");

                    b.HasOne("MidStateShuttleService.Models.Data.Location", "PickUpLocation")
                        .WithMany("RoutePickUpLocations")
                        .HasForeignKey("PickUpLocationId")
                        .IsRequired()
                        .HasConstraintName("FK__Route__PickUpLoc__18EBB532");

                    b.Navigation("DropOffLocation");

                    b.Navigation("PickUpLocation");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.RouteLocation", b =>
                {
                    b.HasOne("MidStateShuttleService.Models.Data.Location", "Location")
                        .WithMany("RouteLocationLocations")
                        .HasForeignKey("LocationId")
                        .IsRequired()
                        .HasConstraintName("FK__RouteLoca__Locat__1EA48E88");

                    b.HasOne("MidStateShuttleService.Models.Data.Location", "NextStop")
                        .WithMany("RouteLocationNextStops")
                        .HasForeignKey("NextStopId")
                        .IsRequired()
                        .HasConstraintName("FK__RouteLoca__NextS__1F98B2C1");

                    b.Navigation("Location");

                    b.Navigation("NextStop");
                });

            modelBuilder.Entity("MidStateShuttleService.Areas.Identity.Data.MidStateShuttleServiceUser", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Registrations");

                    b.Navigation("Riders");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.Bus", b =>
                {
                    b.Navigation("BusDrivers");

                    b.Navigation("BusRiders");

                    b.Navigation("BusRoutes");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.Driver", b =>
                {
                    b.Navigation("BusDrivers");

                    b.Navigation("Buses");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.Feedback", b =>
                {
                    b.Navigation("Registrations");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.Location", b =>
                {
                    b.Navigation("RouteDropOffLocations");

                    b.Navigation("RouteLocationLocations");

                    b.Navigation("RouteLocationNextStops");

                    b.Navigation("RoutePickUpLocations");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.Rider", b =>
                {
                    b.Navigation("BusRiders");

                    b.Navigation("Buses");
                });

            modelBuilder.Entity("MidStateShuttleService.Models.Data.Route", b =>
                {
                    b.Navigation("BusRoutes");

                    b.Navigation("Messages");

                    b.Navigation("Registrations");
                });
#pragma warning restore 612, 618
        }
    }
}
